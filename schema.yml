openapi: 3.0.3
info:
  title: real Estate
  version: 1.0.0
paths:
  /account/login/:
    post:
      operationId: account_login_create
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogInUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogInUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogInUser'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogInUser'
          description: ''
  /account/password_reset/:
    post:
      operationId: account_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /account/password_reset/confirm/:
    post:
      operationId: account_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /account/password_reset/validate_token/:
    post:
      operationId: account_password_reset_validate_token_create
      description: An Api View which provides a method to verify that a token is valid
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
  /account/register/:
    post:
      operationId: account_register_create
      tags:
      - account
      security:
      - {}
      responses:
        '200':
          description: No response body
  /account/users/:
    get:
      operationId: account_users_list
      tags:
      - account
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /account/verify-code/:
    post:
      operationId: account_verify_code_create
      tags:
      - account
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/estate/category/:
    get:
      operationId: api_estate_category_list
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryViewsetSerializers'
          description: ''
    post:
      operationId: api_estate_category_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryViewsetSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryViewsetSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryViewsetSerializers'
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryViewsetSerializers'
          description: ''
  /api/estate/category/{id}/:
    get:
      operationId: api_estate_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryViewsetSerializers'
          description: ''
    put:
      operationId: api_estate_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryViewsetSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryViewsetSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryViewsetSerializers'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryViewsetSerializers'
          description: ''
    patch:
      operationId: api_estate_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryViewsetSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryViewsetSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryViewsetSerializers'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryViewsetSerializers'
          description: ''
    delete:
      operationId: api_estate_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/estate/properteis:
    get:
      operationId: api_estate_properteis_list
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
          description: ''
  /api/estate/property:
    get:
      operationId: api_estate_property_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
    post:
      operationId: api_estate_property_create
      tags:
      - api
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_estate_property_destroy
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/estate/search/address:
    get:
      operationId: api_estate_search_address_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
          description: ''
components:
  schemas:
    CategorySerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
    CategoryViewsetSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        properties_category:
          type: array
          items:
            $ref: '#/components/schemas/Property'
          readOnly: true
      required:
      - id
      - properties_category
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    LogInUser:
      type: object
      properties:
        email:
          type: string
          format: email
        phone_number:
          type: string
        password:
          type: string
      required:
      - email
      - password
      - phone_number
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    PatchedCategoryViewsetSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        properties_category:
          type: array
          items:
            $ref: '#/components/schemas/Property'
          readOnly: true
    Property:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        photo1:
          type: string
          format: uri
          nullable: true
        photo2:
          type: string
          format: uri
          nullable: true
        photo3:
          type: string
          format: uri
          nullable: true
        photo4:
          type: string
          format: uri
          nullable: true
        category:
          type: array
          items:
            $ref: '#/components/schemas/CategorySerializers'
          readOnly: true
        address:
          type: string
          maxLength: 255
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        meterage:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        bedrooms:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        bathrooms:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        garage:
          type: boolean
          nullable: true
      required:
      - category
      - id
      - user
    ResetToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    TypeEnum:
      enum:
      - z
      - m
      - t
      type: string
      description: |-
        * `z` - زمین
        * `m` - مسکونی
        * `t` - تجاری
    User:
      type: object
      properties:
        email:
          type: string
          maxLength: 30
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        national_code:
          type: string
          nullable: true
          maxLength: 10
        image_profile:
          type: string
          format: uri
          nullable: true
        password:
          type: string
        confirm_password:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - email
      - password
